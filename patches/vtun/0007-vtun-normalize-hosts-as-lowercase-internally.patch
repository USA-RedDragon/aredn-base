From 3af435c8f6e4b3f3cd91ab1b1327a7973d9f9add Mon Sep 17 00:00:00 2001
From: Jacob McSwain <jacob.a.mcswain@gmail.com>
Date: Fri, 3 Nov 2023 20:49:25 -0500
Subject: [PATCH 7/7] vtun: normalize hosts as lowercase internally

---
 cfg_file.y | 35 +++++++++++++++++++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/cfg_file.y b/cfg_file.y
index 8552e0e..3591151 100644
--- a/cfg_file.y
+++ b/cfg_file.y
@@ -27,6 +27,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <stdarg.h>
+#include <ctype.h>
 
 #include <syslog.h>
 
@@ -105,7 +106,22 @@ statement: '\n'
 		   * MUST dup strings to be able to reread config.
 		   */
 	  	  memcpy(parse_host, &default_host, sizeof(struct vtun_host));
-		  parse_host->host = strdup($1);
+
+		  unsigned char *hostStr = (unsigned char *) strdup($1);
+		  int len = 0;
+		  while (*hostStr) {
+			*hostStr = tolower(*hostStr);
+			hostStr++;
+			len++;
+			// Safety check to avoid infinite loop
+			if (len > 255) {
+				yyerror("Host name too long");
+				YYABORT;
+			}
+		  }
+		  hostStr -= len;
+
+		  parse_host->host = (char *) hostStr;
 		  parse_host->passwd = NULL;
 
 		  /* Copy local address */
@@ -593,7 +609,22 @@ int free_host(void *d, void *u)
  */ 
 inline struct vtun_host* find_host(char *host)
 {
-   return (struct vtun_host *)llist_free(&host_list, free_host, host);
+   unsigned char *hostStr = (unsigned char *) strdup(host);
+   int len = 0;
+   while (*hostStr) {
+      *hostStr = tolower(*hostStr);
+      hostStr++;
+      len++;
+      // Safety check to avoid infinite loop
+      if (len > 255) {
+        free(hostStr);
+        return NULL;
+      }
+   }
+   hostStr -= len;
+   struct vtun_host *ret = (struct vtun_host *)llist_free(&host_list, free_host, hostStr);
+   free(hostStr);
+   return ret;
 }
 
 int clear_nat_hack_server(void *d, void *u)
-- 
2.41.0

